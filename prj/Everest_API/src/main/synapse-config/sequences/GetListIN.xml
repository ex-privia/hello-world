<?xml version="1.0" encoding="UTF-8"?>
<sequence name="GetListIN" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log level="custom">
        <property name="mylog" value="***************************** RECEIVED REQUEST FROM THE CLIENT **************************"/>
    </log>
    <!-- choose the xml formatter -->
    <property name="messageType" scope="axis2" type="STRING" value="application/x-www-form-urlencoded"/>
    <!-- set headers -->
    <property name="Content-Type" scope="transport" type="STRING" value="application/x-www-form-urlencoded"/>
    <property name="Accept" scope="transport" type="STRING" value="application/sparql-results+json"/>
    <log level="custom">
        <property name="mylog" value="*********************** CALLING BACK END: SPARQL ********************"/>
    </log>
    <!-- call the annotation operation on the ro api -->
    <property expression="get-property('RONAME')" name="uri.var.location" scope="default" type="STRING"/>
    <script language="js"><![CDATA[//
            	var payloadJSON = mc.getPayloadJSON();
				var entityType = "";
				if( 'entityType' in payloadJSON){
					entityType = payloadJSON.entityType;
				}
				var query = "";
				if( entityType === "resource"){
					var ro = "";
					if( 'ro' in payloadJSON){
						ro = payloadJSON.ro;
					}
					var orderBy = "ORDER BY ?created ?entryOf ?resource ?creator ?type";
					if( 'orderBy' in payloadJSON){
						orderBy = "ORDER BY " + payloadJSON.orderBy;
					}
					query = "\
						PREFIX ore: <http://www.openarchives.org/ore/terms/>\
						PREFIX  ao:    <http://purl.org/ao/>\
						PREFIX dct: <http://purl.org/dc/terms/>\
						PREFIX ro: <http://purl.org/wf4ever/ro#>\
						SELECT ?resource ?creator ?created ?name ?filesize ?title ?desc ?proxy ?entryOf\
						WHERE {\
						<" + ro + "> ore:isDescribedBy ?RoManifest ;\
									 ore:aggregates ?resource .\
						GRAPH ?RoManifest{\
							?resource a ro:Resource .\
							OPTIONAL { [a ro:Folder] ore:isDescribedBy ?folderMap.\
								GRAPH ?folderMap{\
									[a ro:FolderEntry; ore:proxyFor ?resource] ore:proxyIn ?entryOf \
								}\
							}\
							OPTIONAL { ?resource dct:creator ?creator}\
							OPTIONAL { ?resource dct:created ?created}\
							OPTIONAL { ?resource ro:name ?name}\
							OPTIONAL { ?resource ro:filesize ?filesize}\
							?proxy ore:proxyFor ?resource\
							OPTIONAL { ?annotation ro:annotatesAggregatedResource ?resource;\
										ao:body ?titlebody.\
								GRAPH ?titlebody{\
									?resource dct:title ?title\
									}\
								}\
							OPTIONAL { ?annotation2 ro:annotatesAggregatedResource ?resource;\
										ao:body ?descbody.\
								GRAPH ?descbody{\
									?resource dct:description ?desc\
									}\
								}\
							} \
						} " + orderBy + "\
					";
				}else if( entityType === "RO"){
					var vrc = "";
					if( 'vrc' in payloadJSON){
						vrc = "FILTER regex( str( ?vrc), \"" + payloadJSON.vrc + "\", \"i\") ";
					}
	            	var createdInterval = "";
					if( 'since_YYYY-MM-DD' in payloadJSON){
		            	createdInterval += "\
						    FILTER ( ?created >= \"" + payloadJSON["since_YYYY-MM-DD"] + "T00:00:00.000Z\"^^xsd:dateTime) \
						";
					}
					if( 'till_YYYY-MM-DD' in payloadJSON){
		            	createdInterval += "\
						    FILTER ( ?created <= \"" + payloadJSON["till_YYYY-MM-DD"] + "T23:59:59.999Z\"^^xsd:dateTime) \
						";
					}
					var title = "";
					if( 'title' in payloadJSON){
						title = "FILTER regex( str( ?title), \"" + payloadJSON.title + "\", \"i\")";
					}
					var description = "";
					if( 'description' in payloadJSON){
						description = "FILTER regex( str( ?description), \"" + payloadJSON.description + "\", \"i\")";
					}
					var creator = "";
					if( 'creator' in payloadJSON){
						creator = "FILTER regex( str( ?creator), \"" + payloadJSON.creator + "\", \"i\")";
					}
					var status = "";
					if( 'status' in payloadJSON){
						status = "FILTER EXISTS{ ?ro a roevo:" + payloadJSON.status + "}";
					}
					var ro = "";
					if( 'ro' in payloadJSON){
						ro = "FILTER regex( str( ?ro), \"" + payloadJSON.ro + "\", \"i\")";
					}
					var orderBy = "ORDER BY ?title ?created ?creator ?ro ?description ?vrc ?status";
					if( 'orderBy' in payloadJSON){
						orderBy = "ORDER BY " + payloadJSON.orderBy;
					}
					query = "\
					PREFIX dct: <http://purl.org/dc/terms/>\
					PREFIX dcterms: <http://purl.org/dc/terms/>\
					PREFIX ro: <http://purl.org/wf4ever/ro#>\
					PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\
					PREFIX acs: <http://www.acsys.it/everest#>\
					PREFIX roevo: <http://purl.org/wf4ever/roevo#>\
					PREFIX foaf: <http://xmlns.com/foaf/0.1/>\
					SELECT ?ro ?created ?title ?description ?vrc ?creatorName ?creator (IF(EXISTS{ ?ro a roevo:LiveRO}, \"LiveRO\", IF( EXISTS{ ?ro a roevo:SnapshotRO}, \"SnapshotRO\", \"ArchivedRO\")) as ?status)\
					WHERE { \
					 	?ro a ro:ResearchObject .\
					    OPTIONAL { ?ro acs:vrc ?vrc } .\
					    OPTIONAL { ?ro dct:created ?created } .\
						OPTIONAL { ?ro dct:title ?title } .\
						OPTIONAL { ?ro dct:description ?description } .\
						OPTIONAL { ?ro dcterms:creator ?creator .\
						OPTIONAL { ?creator foaf:name ?creatorName . } }\
						" + vrc
						+ createdInterval
						+ title
						+ description
						+ creator
						+ status
						+ ro
					+ " } " + orderBy
					;
					// FILTER regex( str( ?x), \"Pack\")\
				}else{
					var ro = "";
					if( 'ro' in payloadJSON){
						ro = payloadJSON.ro;
					}
					var resource = "";
					if( 'resource' in payloadJSON){
						resource = payloadJSON.resource;
						var orderBy = "ORDER BY ?term ?vocabulary ?annotatedSince ?annotatorName ?annotates";
						if( 'orderBy' in payloadJSON){
							orderBy = "ORDER BY " + payloadJSON.orderBy;
						}
						query = "\
							PREFIX ore: <http://www.openarchives.org/ore/terms/>\
							PREFIX  ao:    <http://purl.org/ao/>\
							PREFIX dct: <http://purl.org/dc/terms/>\
							PREFIX ro: <http://purl.org/wf4ever/ro#>\
							PREFIX foaf: <http://xmlns.com/foaf/0.1/>\
							PREFIX afn: <http://jena.hpl.hp.com/ARQ/function#>\
							SELECT (SAMPLE (?vocabulary1) AS ?vocabulary) (SAMPLE (?term1) AS ?term) (SAMPLE (?value1) AS ?value) (SAMPLE (?annotatedSince1) AS ?annotatedSince) (SAMPLE (?annotator1) AS ?annotator) (SAMPLE (?annotatorName1) AS ?annotatorName) (SAMPLE (?created1) AS ?created) (SAMPLE (?creator1) AS ?creator) (SAMPLE (?creatorName1) AS ?creatorName) (SAMPLE (?annotates1) AS ?annotates) (SAMPLE (?annotation1) AS ?annotation) (SAMPLE (?body1) AS ?body) (CONCAT( \"{\", GROUP_CONCAT( ?z; SEPARATOR=\", \"), \"}\") AS ?pairSet)\
							WHERE{\
								SELECT ?vocabulary1 ?term1 ?value1 ?annotatedSince1 ?annotator1 ?annotatorName1 ?created1 ?creator1 ?creatorName1 ?annotates1 ?annotation1 ?body1 ?z\
								WHERE {\
									VALUES (?ro ?res) {(<" + ro + "> <" + resource + ">)}\
									?ro ore:isDescribedBy ?manifest\
									GRAPH ?manifest{\
										{\
											?annotation1 ro:annotatesAggregatedResource ?res.\
											?annotation1 ao:body ?body1.\
											GRAPH ?body1{\
												?res ?metadata ?value1\
												OPTIONAL{\
													?value1 ?x ?y\
													BIND( CONCAT( \"'\", STR(?x), \"': '\", STR(?y), \"'\") AS ?z)\
												}\
											}\
											BIND( afn:namespace( ?metadata) AS ?vocabulary1)\
											BIND( afn:localname( ?metadata) AS ?term1)\
											OPTIONAL { ?annotation1 dct:created ?annotatedSince1;\
													dct:creator ?annotator1.\
												OPTIONAL{\
														?annotator1 foaf:name ?annotatorName1\
													}\
											}\
											OPTIONAL { ?body1 dct:created ?created1;\
													dct:creator ?creator1.\
												OPTIONAL{\
														?creator1 foaf:name ?creatorName1\
													}\
											}\
										}UNION{\
											?proxy ore:proxyFor ?res.\
											?annotation1 ro:annotatesAggregatedResource ?proxy.\
											?annotation1 ao:body ?body1.\
											GRAPH ?body1{\
												?proxy ?metadata ?value1\
												OPTIONAL{\
													?value1 ?x ?y\
													BIND( CONCAT( \"'\", STR(?x), \"': '\", STR(?y), \"'\") AS ?z)\
												}\
											}\
											BIND( afn:namespace( ?metadata) AS ?vocabulary1)\
											BIND( afn:localname( ?metadata) AS ?term1)\
											OPTIONAL { ?annotation1 dct:created ?annotatedSince1;\
													dct:creator ?annotator1.\
												OPTIONAL{\
														?annotator1 foaf:name ?annotatorName1\
													}\
											}\
											OPTIONAL { ?body1 dct:created ?created1;\
													dct:creator ?creator1.\
												OPTIONAL{\
														?creator1 foaf:name ?creatorName1\
													}\
											}\
											BIND( \"proxy\" AS ?annotates1)\
										}\
									}\
								}\
							} GROUP BY ?value1\ " + orderBy + "\
						";
					}else{
						var orderBy = "ORDER BY ?term ?vocabulary ?annotatedSince ?annotatorName";
						if( 'orderBy' in payloadJSON){
							orderBy = "ORDER BY " + payloadJSON.orderBy;
						}
						query = "\
							PREFIX ore: <http://www.openarchives.org/ore/terms/>\
							PREFIX  ao:    <http://purl.org/ao/>\
							PREFIX dct: <http://purl.org/dc/terms/>\
							PREFIX ro: <http://purl.org/wf4ever/ro#>\
							PREFIX foaf: <http://xmlns.com/foaf/0.1/>\
							PREFIX afn: <http://jena.hpl.hp.com/ARQ/function#>\
							SELECT (SAMPLE (?vocabulary1) AS ?vocabulary) (SAMPLE (?term1) AS ?term) (SAMPLE (?value1) AS ?value) (SAMPLE (?annotatedSince1) AS ?annotatedSince) (SAMPLE (?annotator1) AS ?annotator) (SAMPLE (?annotatorName1) AS ?annotatorName) (SAMPLE (?created1) AS ?created) (SAMPLE (?creator1) AS ?creator) (SAMPLE (?creatorName1) AS ?creatorName) (SAMPLE (?annotation1) AS ?annotation) (SAMPLE (?body1) AS ?body) (CONCAT( \"{\", GROUP_CONCAT( ?z; SEPARATOR=\", \"), \"}\") AS ?pairSet)\
							WHERE{\
								SELECT ?vocabulary1 ?term1 ?value1 ?annotatedSince1 ?annotator1 ?annotatorName1 ?created1 ?creator1 ?creatorName1 ?annotation1 ?body1 ?z\
								WHERE {\
									VALUES (?ro) {(<" + ro + ">)}\
									?ro ore:isDescribedBy ?manifest\
									GRAPH ?manifest{\
										?annotation1 ro:annotatesAggregatedResource ?ro.\
										?annotation1 ao:body ?body1.\
										GRAPH ?body1{\
											?ro ?metadata ?value1\
												OPTIONAL{\
													?value1 ?x ?y\
													BIND( CONCAT( \"'\", STR(?x), \"': '\", STR(?y), \"'\") AS ?z)\
												}\
										}\
										BIND( afn:namespace( ?metadata) AS ?vocabulary1)\
										BIND( afn:localname( ?metadata) AS ?term1)\
										OPTIONAL { ?annotation1 dct:created ?annotatedSince1;\
												dct:creator ?annotator1.\
											OPTIONAL{\
													?annotator1 foaf:name ?annotatorName1\
												}\
										}\
										OPTIONAL { ?body1 dct:created ?created1;\
												dct:creator ?creator1.\
											OPTIONAL{\
													?creator1 foaf:name ?creatorName1\
												}\
											}\
									}\
								}\
							} GROUP BY ?value1\ " + orderBy + "\
						";
					}
				}
				mc.setProperty("QUERY", query);
				mc.setPayloadXML( <params xmlns=""><query>{query}</query></params>);
			//]]></script>
    <log level="custom">
        <property expression="get-property('QUERY')" name="SPARQL QUERY:"/>
    </log>
    <call>
        <endpoint>
            <http uri-template="http://sandbox.rohub.org/rodl/"/>
        </endpoint>
    </call>
    <respond/>
</sequence>
