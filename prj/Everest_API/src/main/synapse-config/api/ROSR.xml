<?xml version="1.0" encoding="UTF-8"?>
<api context="/everest" name="ROSR" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="POST" url-mapping="/ROs">
        <inSequence>
            <property expression="get-property('MessageID')" name="REQUEST_ID" scope="default" type="STRING"/>
            <log>
                <property name="STEP" value="OPERATION STARTED"/>
                <property expression="get-property('axis2', 'REMOTE_HOST')" name="REMOTE_HOST"/>
                <property expression="get-property('axis2', 'REMOTE_ADDR')" name="REMOTE_ADDR"/>
            </log>
            <sequence key="createROsin"/>
        </inSequence>
        <outSequence>
            <log level="custom">
                <property name="STEP" value="OPERATION ENDED ORDINARILY"/>
                <property expression="get-property('REQUEST_ID')" name="MessageID"/>
            </log>
            <respond/>
        </outSequence>
        <faultSequence>
            <filter xpath="get-property('REQUEST_ID')=$header/wsa:MessageID">
                <then>
                    <log category="ERROR" level="full">
                        <property expression="get-property('ERROR_CODE')" name="ERROR_CODE"/>
                        <property expression="get-property('ERROR_MESSAGE')" name="ERROR_MESSAGE"/>
                        <property name="STEP" value="OPERATION ENDED EXCEPTIONALLY"/>
                    </log>
                    <property name="HTTP_SC" scope="axis2" type="STRING" value="500"/>
                    <payloadFactory media-type="json">
                        <format>
						{
							"RequestID": "$1",
							"Category": "ESB",
							"Code": "$2",
							"Msg": "$3"
						}
					</format>
                        <args>
                            <arg evaluator="xml" expression="get-property('MessageID')"/>
                            <arg evaluator="xml" expression="get-property('ERROR_CODE')"/>
                            <arg evaluator="xml" expression="get-property('ERROR_MESSAGE')"/>
                        </args>
                    </payloadFactory>
                    <property action="remove" name="TRANSPORT_HEADERS" scope="axis2"/>
                    <property expression="get-property('MessageID')" name="X-Request-ID" scope="transport" type="STRING"/>
                    <property name="DISABLE_CHUNKING" scope="axis2" type="STRING" value="true"/>
                    <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
                    <respond/>
                </then>
                <else>
                    <log category="ERROR" level="full">
                        <property expression="get-property('ERROR_CODE')" name="ERROR_CODE"/>
                        <property expression="get-property('ERROR_MESSAGE')" name="ERROR_MESSAGE"/>
                        <property name="STEP" value="SUBOPERATION ENDED EXCEPTIONALLY"/>
                    </log>
                </else>
            </filter>
        </faultSequence>
    </resource>
    <resource methods="POST" url-mapping="/">
        <inSequence>
            <sequence key="DeleteROsIN"/>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <log level="full">
                <property name="MESSAGE" value="Executing default sequence"/>
                <property expression="get-property('ERROR_CODE')" name="ERROR_CODE"/>
                <property expression="get-property('ERROR_MESSAGE')" name="ERROR_MESSAGE"/>
            </log>
            <send/>
        </faultSequence>
    </resource>
    <resource methods="POST" url-mapping="/sparql">
        <inSequence>
            <sequence key="GetListIN"/>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <log level="full">
                <property name="MESSAGE" value="Executing default sequence"/>
                <property expression="get-property('ERROR_CODE')" name="ERROR_CODE"/>
                <property expression="get-property('ERROR_MESSAGE')" name="ERROR_MESSAGE"/>
            </log>
        </faultSequence>
    </resource>
    <resource methods="POST" url-mapping="/evo/copy">
        <inSequence>
            <call>
                <endpoint>
                    <http uri-template="http://sandbox.rohub.org/rodl"/>
                </endpoint>
            </call>
            <respond/>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <log level="full">
                <property name="MESSAGE" value="Executing default sequence"/>
                <property expression="get-property('ERROR_CODE')" name="ERROR_CODE"/>
                <property expression="get-property('ERROR_MESSAGE')" name="ERROR_MESSAGE"/>
            </log>
            <send/>
        </faultSequence>
    </resource>
    <resource methods="POST" url-mapping="/add">
        <inSequence>
            <log>
                <property name="STEP" value="OPERATION STARTED"/>
                <property expression="get-property('axis2', 'REMOTE_HOST')" name="REMOTE_HOST"/>
                <property expression="get-property('axis2', 'REMOTE_ADDR')" name="REMOTE_ADDR"/>
            </log>
            <sequence key="AddIN"/>
        </inSequence>
        <outSequence>
            <log level="custom">
                <property name="STEP" value="OPERATION ENDED ORDINARILY"/>
                <property expression="get-property('MessageID')" name="MessageID"/>
            </log>
            <property action="remove" name="TRANSPORT_HEADERS" scope="axis2"/>
            <property name="messageType" scope="axis2" type="STRING" value="text/plain"/>
            <property expression="get-property('MessageID')" name="X-Request-ID" scope="transport" type="STRING"/>
            <property name="DISABLE_CHUNKING" scope="axis2" type="STRING" value="true"/>
            <respond/>
        </outSequence>
        <faultSequence>
            <log level="full">
                <property name="MESSAGE" value="Executing default sequence"/>
                <property expression="get-property('ERROR_CODE')" name="ERROR_CODE"/>
                <property expression="get-property('ERROR_MESSAGE')" name="ERROR_MESSAGE"/>
            </log>
        </faultSequence>
    </resource>
    <resource methods="POST" url-mapping="/delete">
        <inSequence>
            <sequence key="DeleteResourcesIN"/>
        </inSequence>
        <outSequence/>
        <faultSequence>
            <log level="full">
                <property name="MESSAGE" value="Executing default sequence"/>
                <property expression="get-property('ERROR_CODE')" name="ERROR_CODE"/>
                <property expression="get-property('ERROR_MESSAGE')" name="ERROR_MESSAGE"/>
            </log>
        </faultSequence>
    </resource>
    <resource methods="POST" url-mapping="/getRoMode">
        <inSequence>
            <log>
                <property name="STEP" value="OPERATION STARTED"/>
                <property expression="get-property('axis2', 'REMOTE_HOST')" name="REMOTE_HOST"/>
                <property expression="get-property('axis2', 'REMOTE_ADDR')" name="REMOTE_ADDR"/>
            </log>
            <sequence key="getRoModeIN"/>
        </inSequence>
        <outSequence>
            <log level="custom">
                <property name="STEP" value="OPERATION ENDED ORDINARILY"/>
                <property expression="get-property('MessageID')" name="MessageID"/>
            </log>
            <respond/>
        </outSequence>
        <faultSequence/>
    </resource>
    <resource methods="POST" url-mapping="/updateRoModes">
        <inSequence>
            <log>
                <property name="STEP" value="OPERATION STARTED"/>
                <property expression="get-property('axis2', 'REMOTE_HOST')" name="REMOTE_HOST"/>
                <property expression="get-property('axis2', 'REMOTE_ADDR')" name="REMOTE_ADDR"/>
            </log>
            <sequence key="updateRoModesIN"/>
        </inSequence>
        <outSequence>
            <log level="custom">
                <property name="STEP" value="OPERATION ENDED ORDINARILY"/>
                <property expression="get-property('MessageID')" name="MessageID"/>
            </log>
            <property action="remove" name="TRANSPORT_HEADERS" scope="axis2"/>
            <property name="messageType" scope="axis2" type="STRING" value="text/plain"/>
            <property expression="get-property('MessageID')" name="X-Request-ID" scope="transport" type="STRING"/>
            <property name="DISABLE_CHUNKING" scope="axis2" type="STRING" value="true"/>
            <respond/>
        </outSequence>
        <faultSequence/>
    </resource>
    <resource methods="POST" url-mapping="/getPermissions">
        <inSequence>
            <log>
                <property name="STEP" value="OPERATION STARTED"/>
                <property expression="get-property('axis2', 'REMOTE_HOST')" name="REMOTE_HOST"/>
                <property expression="get-property('axis2', 'REMOTE_ADDR')" name="REMOTE_ADDR"/>
            </log>
            <sequence key="getPermissionsIN"/>
        </inSequence>
        <outSequence>
            <log level="custom">
                <property name="STEP" value="OPERATION ENDED ORDINARILY"/>
                <property expression="get-property('MessageID')" name="MessageID"/>
            </log>
            <respond/>
        </outSequence>
        <faultSequence/>
    </resource>
    <resource methods="POST" url-mapping="/updatePermissions">
        <inSequence>
            <log>
                <property name="STEP" value="OPERATION STARTED"/>
                <property expression="get-property('axis2', 'REMOTE_HOST')" name="REMOTE_HOST"/>
                <property expression="get-property('axis2', 'REMOTE_ADDR')" name="REMOTE_ADDR"/>
            </log>
            <sequence key="updatePermissionsIN"/>
        </inSequence>
        <outSequence>
            <log level="custom">
                <property name="STEP" value="OPERATION ENDED ORDINARILY"/>
                <property expression="get-property('MessageID')" name="MessageID"/>
            </log>
            <property action="remove" name="TRANSPORT_HEADERS" scope="axis2"/>
            <property name="messageType" scope="axis2" type="STRING" value="text/plain"/>
            <property expression="get-property('MessageID')" name="X-Request-ID" scope="transport" type="STRING"/>
            <property name="DISABLE_CHUNKING" scope="axis2" type="STRING" value="true"/>
            <respond/>
        </outSequence>
        <faultSequence/>
    </resource>
    <resource methods="POST" url-mapping="/createFolders">
        <inSequence>
            <log>
                <property name="STEP" value="OPERATION STARTED"/>
                <property expression="get-property('axis2', 'REMOTE_HOST')" name="REMOTE_HOST"/>
                <property expression="get-property('axis2', 'REMOTE_ADDR')" name="REMOTE_ADDR"/>
            </log>
            <sequence key="createFoldersIN"/>
        </inSequence>
        <outSequence>
            <log level="custom">
                <property name="STEP" value="OPERATION ENDED ORDINARILY"/>
                <property expression="get-property('MessageID')" name="MessageID"/>
            </log>
            <property action="remove" name="TRANSPORT_HEADERS" scope="axis2"/>
            <property name="messageType" scope="axis2" type="STRING" value="text/plain"/>
            <property expression="get-property('MessageID')" name="X-Request-ID" scope="transport" type="STRING"/>
            <property name="DISABLE_CHUNKING" scope="axis2" type="STRING" value="true"/>
            <respond/>
        </outSequence>
        <faultSequence/>
    </resource>
    <resource methods="POST" url-mapping="/metadata">
        <inSequence>
            <log>
                <property name="STEP" value="OPERATION STARTED"/>
                <property expression="get-property('axis2', 'REMOTE_HOST')" name="REMOTE_HOST"/>
                <property expression="get-property('axis2', 'REMOTE_ADDR')" name="REMOTE_ADDR"/>
            </log>
            <sequence key="MetadataIN"/>
        </inSequence>
        <outSequence>
            <log level="custom">
                <property name="STEP" value="OPERATION ENDED ORDINARILY"/>
                <property expression="get-property('MessageID')" name="MessageID"/>
            </log>
            <property action="remove" name="TRANSPORT_HEADERS" scope="axis2"/>
            <property name="messageType" scope="axis2" type="STRING" value="text/plain"/>
            <property expression="get-property('MessageID')" name="X-Request-ID" scope="transport" type="STRING"/>
            <property name="DISABLE_CHUNKING" scope="axis2" type="STRING" value="true"/>
            <respond/>
        </outSequence>
        <faultSequence>
            <log level="full">
                <property name="MESSAGE" value="Executing default sequence"/>
                <property expression="get-property('ERROR_CODE')" name="ERROR_CODE"/>
                <property expression="get-property('ERROR_MESSAGE')" name="ERROR_MESSAGE"/>
            </log>
        </faultSequence>
    </resource>
    <resource methods="GET" url-mapping="/sleep">
        <inSequence>
            <log>
                <property name="STEP" value="OPERATION STARTED"/>
                <property expression="get-property('axis2', 'REMOTE_HOST')" name="REMOTE_HOST"/>
                <property expression="get-property('axis2', 'REMOTE_ADDR')" name="REMOTE_ADDR"/>
            </log>
            <sequence key="SleepIN"/>
        </inSequence>
        <outSequence>
            <log level="custom">
                <property name="STEP" value="OPERATION ENDED ORDINARILY"/>
                <property expression="get-property('MessageID')" name="MessageID"/>
            </log>
            <property action="remove" name="TRANSPORT_HEADERS" scope="axis2"/>
            <property name="messageType" scope="axis2" type="STRING" value="text/plain"/>
            <property expression="get-property('MessageID')" name="X-Request-ID" scope="transport" type="STRING"/>
            <property name="DISABLE_CHUNKING" scope="axis2" type="STRING" value="true"/>
            <respond/>
        </outSequence>
        <faultSequence/>
    </resource>
</api>
